Determining if the pthread_create exist failed with the following output:
Change Dir: /home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/gmake" "cmTC_f7b0c/fast"
gmake[3]: Entering directory '/home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp'
/usr/bin/gmake -f CMakeFiles/cmTC_f7b0c.dir/build.make CMakeFiles/cmTC_f7b0c.dir/build
gmake[4]: Entering directory '/home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f7b0c.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_f7b0c.dir/CheckSymbolExists.c.o   -c /home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_f7b0c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f7b0c.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_f7b0c.dir/CheckSymbolExists.c.o  -o cmTC_f7b0c 
CMakeFiles/cmTC_f7b0c.dir/CheckSymbolExists.c.o: In function `main':
CheckSymbolExists.c:(.text+0x16): undefined reference to `pthread_create'
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_f7b0c.dir/build.make:97: recipe for target 'cmTC_f7b0c' failed
gmake[4]: *** [cmTC_f7b0c] Error 1
gmake[4]: Leaving directory '/home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_f7b0c/fast' failed
gmake[3]: *** [cmTC_f7b0c/fast] Error 2
gmake[3]: Leaving directory '/home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp'

File /home/user/PROJECT/akademia_cpp/build-cmake-gtest-master2-Desktop-Default/lib/gtest/gtest/src/gtest-build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

